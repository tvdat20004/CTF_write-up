from sage.all import * 
from Crypto.Cipher import AES  
from Crypto.Util.number import * 
from hashlib import sha256
enc_flag = bytes.fromhex("00cc03bebb6756fded9a55e772b665d3f98004163904713b83c0bfed06558e9ce57d1d50409179741b09d5f059d668d5fd7775892e403357200c5c516125cb53451f52d34f08e4e2885588c046360bfc44c84a3a4da194484d2ca414ba01e698221936ea8e372b6a3bf4af1c85a99e54df52b58d6a7a0add3752e88fa928c15d")

F = GF(88061271168532822384517279587784001104302157326759940683992330399098283633319)

P1 = (1, 27006418753792019267647881709336369603809025474153761185424552629526746515909)
P2 = (2, 76590454267924193303526931251420387908730989759486987968207839464816350274449)
P3 = (3, 67564500698667187837224046797217120599664632018519685208508601443605280795068)
P4 =  (4, 57120102994643471094254225269948720992016639286627873340589938545214763610538)
P5 = (5, 87036956450994410488989322365773556006053008613964544744444104769020810012336)
P = PolynomialRing(F, 'x')
f = P.lagrange_polynomial([P1, P2, P3, P4, P5])
key = long_to_bytes(int(f.coefficients()[0]))

print(AES.new(key, AES.MODE_ECB).decrypt(enc_flag))