from mpmath import mp, cos, sin, pslq, mpf
from Crypto.Util.number import long_to_bytes
mp.prec=1000

x = mpf('0.75872961153339387563860550178464795474547887323678173252494265684893323654606628651427151866818730100357590296863274236719073684620030717141521941211167282170567424114270941542016135979438271439047194028943997508126389603529160316379547558098144713802870753946485296790294770557302303874143106908193100')
enc = mpf('2.78332652222000091147933689155414792020338527644698903976732528036823470890155538913578083110732846416012108159157421703264608723649277363079905992717518852564589901390988865009495918051490722972227485851595410047572144567706501150041757189923387228097603575500648300998275877439215112961273516978501e45')
cos_x = cos(x)
sin_x = sin(x)

result = pslq([-enc, cos_x, sin_x],maxcoeff=256**19, maxsteps=100000, verbose=True)
print(result)
if result:
    a, b = result[1], result[2] 
    a = int(round(a))
    b = int(round(b))

    first_half = long_to_bytes(abs(a))
    second_half = long_to_bytes(abs(b))
    
    flag = first_half + second_half
    print("Found flag:", flag.decode())
