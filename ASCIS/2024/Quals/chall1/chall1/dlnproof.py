import random
from common import SHA512_256i, long_to_bin

Iterations = 32


def getDLNProof(h1, h2, x, phi, N):
    h1 = h1 % N
    h2 = h2 % N
    assert pow(h1, x, N) == h2
    a = [random.randint(1, phi - 1) for _ in range(Iterations)]
    alpha = [pow(h1, a[i], N) for i in range(Iterations)]
    msg = [h1, h2, N] + alpha
    c = long_to_bin(SHA512_256i(msg))[:Iterations]
    t = [(a[i] + c[i] * x) % phi for i in range(Iterations)]
    return (alpha, t)


def verify(h1, h2, N, alpha, t):
    if N <= 0:
        return False
    h1_ = h1 % N
    h2_ = h2 % N
    if h1_ == h2_:
        return False
    for i in range(Iterations):
        a = alpha[i] % N
        if a <= 1 or a >= N:
            return False
    for i in range(Iterations):
        a = t[i] % N
        if a <= 1 or a >= N:
            return False
    msg = [h1, h2, N] + alpha
    c = long_to_bin(SHA512_256i(msg))[:Iterations]
    for i in range(Iterations):
        cI = c[i]
        h1ExpTi = pow(h1, t[i], N)
        h2ExpCi = pow(h2, cI, N)
        alphaIMulH2ExpCi = (alpha[i] * h2ExpCi) % N
        if h1ExpTi != alphaIMulH2ExpCi:
            return False
    return True


if __name__ == '__main__':
    NTilde = 20198128794572047398059046800657931427203985062045251760936172533864221560669653106445667691978831076298048953188668736235852917296765355504469613297390220570572902517942048385939574361277238435184771455821873082855370244601994919025145871408553267186799875788171848261947368863491518895283097500946816313153189029095800368344242150862360965399672107170707791143648454115018067459502021930311570770374142885328620441215508381811424175550149099897143415601932965619041092782150339862245487195559831433375075315943748906761998355474770238025562778449601492882937496116496725747679394623107966359733545334415547832452947
    phi = 20198128794572047398059046800657931427203985062045251760936172533864221560669653106445667691978831076298048953188668736235852917296765355504469613297390220570572902517942048385939574361277238435184771455821873082855370244601994919025145871408553267186799875788171848261947368863491518895283097500946816313153189029095800368344242150862360965399672107170707791143648454115018067459502021930311570770374142885328620441215508381811424175550149099897143415601932965619041092782150339862245487195559831433375075315943748906761998355474770238025562778449601492882937496116496725747679394623107966359733545334415547832452946
    phi //= 2
    h1 = 4
    assert phi % 2 == 1
    assert pow(h1, phi, NTilde) == 1
    x = 2**256
    h2 = pow(h1, x, NTilde)
    pf = getDLNProof(h1, h2, x, phi, NTilde)
    assert verify(h1, h2, NTilde, pf[0], pf[1])
    pf = getDLNProof(h2, h1, pow(x, -1, phi), phi, NTilde)
    assert verify(h2, h1, NTilde, pf[0], pf[1])
